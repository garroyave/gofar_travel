punto 5: Create a view to display the information of the bills patient, patient_name, patient_address, date,
--date_admitted, discharge_date, total_items_room_board, balance_room_and_board,
--total_items_laboratory, balance_laboratory, total_items_radiology, balance_radiology. Use the
--functions created in the previous step
create or replace view p5_view_information_patient as
select
      tp.id_paciente as id_paciente
      ,tp.nombre_paciente as nom_paciente
      ,tp.direccion as dir_paciente
      ,tf.fecha_factura as fecha
      ,tf.fecha_ingreso as fecha_ingreso
      ,tf.fecha_salida as fecha_salida
      ,p4_total_bill_items(2005,tf.id_factura) as total_items_room_board -- cantidad de items del centro de costos 2005 Room and board y las facturas del paciente
      ,p4_total_bill_cost_center(2005,tf.id_factura) as total_vlr_factura_romm_board -- total factura del centro de costos 2005 room & board
      ,p4_total_bill_items(2007,tf.id_factura) as total_items_laboratory -- cantidad de items del centro de costos 2007 Laboratory y las facturas del paciente
      ,p4_total_bill_cost_center(2007,tf.id_factura) as total_vlr_factura_laboratory -- total factura del centro de costos 2007 Laboratory
      ,p4_total_bill_items(2002,tf.id_factura) as total_items_radiology -- cantidad de items del centro de costos 2002 Radiology y las facturas del paciente
      ,p4_total_bill_cost_center(2002,tf.id_factura) as total_vlr_factura_radiology -- total factura del centro de costos 2002 Radiology
    from
      pacientes tp
        inner join facturas tf
          on tf.paciente_id = tp.id_paciente;



punto 7: the table where you store those items should have a column
--units_available or unidades_disponibles
alter table servicios
  add unidades_disponibles number default 0 not null;


punto 8: Create a trigger which decreases the number of units available when an item is associated to a bill. 
create or replace trigger p8_trigger_unid_dispo
  after insert --or update or delete
  on DETALLE_FACTURAS
  for each row

declare
     vlr_ser number;
begin
   vlr_Ser:=0;
   begin
       select
         ts.unidades_disponibles
         into
         vlr_ser
       from
         servicios ts
       where
         ts.id_servicio = :old.servicio_id;
   EXCEPTION
       WHEN OTHERS THEN null;
   end;
   begin
     if vlr_ser <> 0 then
          update servicios ts
                 set ts.unidades_disponibles = ts.unidades_disponibles - 1
          where
                 ts.id_servicio = :old.servicio_id;
          commit;
     end if;
   EXCEPTION
   WHEN OTHERS THEN null;
   end;
 end;